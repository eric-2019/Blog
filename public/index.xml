<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Eric&#39;s Blog</title>
    <link>https://eric2017.tk/</link>
    <description>Recent content in Home on Eric&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://eric2017.tk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript 学习笔记 Week 1</title>
      <link>https://eric2017.tk/post/javascript-week-1/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eric2017.tk/post/javascript-week-1/</guid>
      <description>今天正式开始学习JS，同时打算以笔记的形式记录我的学习过程，目前计划每周更新一篇，拭目以待~
  js代码与css类似，需要写在script标签中
 hello world
alert(&amp;quot;Hello world&amp;quot;); *弹出窗口* document.write(&amp;quot;Hello world&amp;quot;); *在body中输出内容* console.log(&amp;quot;Hello world&amp;quot;); *在控制台中输出内容*  按钮触发
&amp;lt;body&amp;gt; &amp;lt;button onclick=&amp;quot;alert(&#39;内容&#39;);&amp;quot;&amp;gt;按钮&amp;lt;/button&amp;gt; &amp;lt;a href=&amp;quot;javascript:alert(&#39;逗你的&#39;)&amp;quot;&amp;gt;点我有惊喜&amp;lt;/a&amp;gt; &amp;lt;/body&amp;gt;  JS基本语法
 JS中严格区分大小写 每一条语句以分号结尾 自动忽略多个分号和换行，可以此进行格式化  字面量和变量
 字面量不可变，可直接使用不加引号，如123 变量可以用来保存字面量，值可以改变，如x=1 使用var关键字声明变量，var a; 并赋值a = 123; var a = 123; 使以上两步的合并   </description>
    </item>
    
    <item>
      <title>Aether Features</title>
      <link>https://eric2017.tk/post/aether-features/</link>
      <pubDate>Wed, 19 Dec 2018 10:35:35 -0500</pubDate>
      
      <guid>https://eric2017.tk/post/aether-features/</guid>
      <description>Hugo combined with the Aether theme turns easy to write markdown into powerful web pages. KaTeX, Highlight.js, and Hugo provides the ability to create mathmatical symobols, equations, highlighted code, tables, lists, and much more.
For each feature below, the first line is the markdown and the second line is the result after Hugo, KaTeX, and Highlight.js process the markdown. You can find many more features in the Hugo documentation.</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://eric2017.tk/post/welcome/</link>
      <pubDate>Sun, 18 Nov 2018 18:46:13 +0800</pubDate>
      
      <guid>https://eric2017.tk/post/welcome/</guid>
      <description>这是我的Blog中的第一篇文章。</description>
    </item>
    
    <item>
      <title>Aether: A Clean Theme for Hugo</title>
      <link>https://eric2017.tk/post/aether-theme/</link>
      <pubDate>Wed, 02 May 2018 14:33:42 -0400</pubDate>
      
      <guid>https://eric2017.tk/post/aether-theme/</guid>
      <description>Today&amp;rsquo;s web is a frustrating mess of pop-ups, intrusive banners, and ads obstructing the content. I designed aether to be free of all these distractions and simply highlight the content. The result feels more like a native application than a website. Interactions are intuitive, content is the focus, and distractions are omitted.
Aether is a Hugo theme for blogs that elevates good writing and photography. If you use Hugo for your blog, give aether a try.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://eric2017.tk/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eric2017.tk/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://eric2017.tk/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eric2017.tk/post/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://eric2017.tk/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eric2017.tk/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://eric2017.tk/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://eric2017.tk/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>